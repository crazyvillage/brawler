@page "/fetchdata"
@using Microsoft.EntityFrameworkCore
@using web.Data
@implements IDisposable
@inject IDbContextFactory<LibraryContext> DbFactory

<PageTitle>Weather forecast</PageTitle>

<h1>Weather forecast</h1>

<p>This component demonstrates fetching data from a service.</p>

@if (_cards == null)
{
    <p><em>Loading...</em></p>
}
else
{
    <table class="table">
        <thead>
            <tr>
                <th>Name</th>
                <th>Colors</th>
                <th>IsCommander</th>
            </tr>
        </thead>
        <tbody>
        @foreach (var c in _cards)
            {
                <tr>
                    <td>@c.Name</td>
                    <td>@c.Colors</td>
                    <td>@c.IsCommander</td>
                </tr>
            }
        </tbody>
    </table>
}

@code {
    private LibraryContext? _context;
    private Card[]? _cards;
    private bool _isLoading;

    protected override async Task OnInitializedAsync()
    {
        if (_isLoading)
        {
            return;
        }

        try
        {
            _isLoading = true;
            _context = await DbFactory.CreateDbContextAsync();
            if (_context?.Cards != null)
            {
                _cards = await _context.Cards.AsNoTracking().ToArrayAsync();
            }
        }
        finally
        {
            _isLoading = false;
        }
    }

    public void Dispose()
    {
        _context?.Dispose();
    }

}
